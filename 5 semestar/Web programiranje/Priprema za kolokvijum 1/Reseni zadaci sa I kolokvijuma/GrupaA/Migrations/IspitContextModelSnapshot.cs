// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace WebTemplate.Migrations
{
    [DbContext(typeof(IspitContext))]
    partial class IspitContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Aerodrom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<long>("KapacitetLetelica")
                        .HasColumnType("bigint");

                    b.Property<long>("KapacitetPutnika")
                        .HasColumnType("bigint");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Aerodromi");
                });

            modelBuilder.Entity("Models.Let", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("AerodromPoletanjaID")
                        .HasColumnType("int");

                    b.Property<int?>("AerodromSletanjaID")
                        .HasColumnType("int");

                    b.Property<int?>("LetelicaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("VremePoletanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VremeSletanja")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AerodromPoletanjaID");

                    b.HasIndex("AerodromSletanjaID");

                    b.HasIndex("LetelicaID");

                    b.ToTable("Letovi");
                });

            modelBuilder.Entity("Models.Letelica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("BrojMotora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("BrojOsobaPosade")
                        .HasColumnType("bigint");

                    b.Property<long>("KapacitetPutnika")
                        .HasColumnType("bigint");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Letelice");
                });

            modelBuilder.Entity("Models.Let", b =>
                {
                    b.HasOne("Models.Aerodrom", "AerodromPoletanja")
                        .WithMany("LetoviPoleteli")
                        .HasForeignKey("AerodromPoletanjaID");

                    b.HasOne("Models.Aerodrom", "AerodromSletanja")
                        .WithMany("LetoviSleteli")
                        .HasForeignKey("AerodromSletanjaID");

                    b.HasOne("Models.Letelica", "Letelica")
                        .WithMany("Letovi")
                        .HasForeignKey("LetelicaID");

                    b.Navigation("AerodromPoletanja");

                    b.Navigation("AerodromSletanja");

                    b.Navigation("Letelica");
                });

            modelBuilder.Entity("Models.Aerodrom", b =>
                {
                    b.Navigation("LetoviPoleteli");

                    b.Navigation("LetoviSleteli");
                });

            modelBuilder.Entity("Models.Letelica", b =>
                {
                    b.Navigation("Letovi");
                });
#pragma warning restore 612, 618
        }
    }
}
