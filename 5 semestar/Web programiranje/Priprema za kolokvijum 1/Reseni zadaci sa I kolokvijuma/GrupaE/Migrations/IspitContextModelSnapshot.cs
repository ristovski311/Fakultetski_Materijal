// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace WebTemplate.Migrations
{
    [DbContext(typeof(IspitContext))]
    partial class IspitContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Grad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<long>("BrojKoloseka")
                        .HasColumnType("bigint");

                    b.Property<long>("BrojStanovnika")
                        .HasColumnType("bigint");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Gradovi");
                });

            modelBuilder.Entity("Models.Relacija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<long>("BrojPutnika")
                        .HasColumnType("bigint");

                    b.Property<long>("CenaKarte")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GradDolaskaID")
                        .HasColumnType("int");

                    b.Property<int?>("GradPolaskaID")
                        .HasColumnType("int");

                    b.Property<int?>("VozID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GradDolaskaID");

                    b.HasIndex("GradPolaskaID");

                    b.HasIndex("VozID");

                    b.ToTable("Relacije");
                });

            modelBuilder.Entity("Models.Voz", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DatumProizvodnje")
                        .HasColumnType("datetime2");

                    b.Property<long>("MaxBrzina")
                        .HasColumnType("bigint");

                    b.Property<long>("MaxKapacitetPutnika")
                        .HasColumnType("bigint");

                    b.Property<long>("Tezina")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Vozovi");
                });

            modelBuilder.Entity("Models.Relacija", b =>
                {
                    b.HasOne("Models.Grad", "GradDolaska")
                        .WithMany("RelacijeDolaska")
                        .HasForeignKey("GradDolaskaID");

                    b.HasOne("Models.Grad", "GradPolaska")
                        .WithMany("RelacijePolaska")
                        .HasForeignKey("GradPolaskaID");

                    b.HasOne("Models.Voz", "Voz")
                        .WithMany("Relacije")
                        .HasForeignKey("VozID");

                    b.Navigation("GradDolaska");

                    b.Navigation("GradPolaska");

                    b.Navigation("Voz");
                });

            modelBuilder.Entity("Models.Grad", b =>
                {
                    b.Navigation("RelacijeDolaska");

                    b.Navigation("RelacijePolaska");
                });

            modelBuilder.Entity("Models.Voz", b =>
                {
                    b.Navigation("Relacije");
                });
#pragma warning restore 612, 618
        }
    }
}
