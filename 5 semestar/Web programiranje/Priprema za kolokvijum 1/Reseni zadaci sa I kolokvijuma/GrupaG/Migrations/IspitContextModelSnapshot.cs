// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace WebTemplate.Migrations
{
    [DbContext(typeof(IspitContext))]
    partial class IspitContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Kupac", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MestoRodjenja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Kupci");
                });

            modelBuilder.Entity("Models.Kupovina", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BrojUgovora")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumKupovine")
                        .HasColumnType("datetime2");

                    b.Property<long>("IsplacenaVrednost")
                        .HasColumnType("bigint");

                    b.Property<int?>("KupacID")
                        .HasColumnType("int");

                    b.Property<int?>("NekretninaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KupacID");

                    b.HasIndex("NekretninaID");

                    b.ToTable("Kupovine");
                });

            modelBuilder.Entity("Models.Nekretnina", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<long>("BrojPrethodnihVlasnika")
                        .HasColumnType("bigint");

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Vrednost")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Nekretnine");
                });

            modelBuilder.Entity("Models.Kupovina", b =>
                {
                    b.HasOne("Models.Kupac", "Kupac")
                        .WithMany("Kupovine")
                        .HasForeignKey("KupacID");

                    b.HasOne("Models.Nekretnina", "Nekretnina")
                        .WithMany("Kupovine")
                        .HasForeignKey("NekretninaID");

                    b.Navigation("Kupac");

                    b.Navigation("Nekretnina");
                });

            modelBuilder.Entity("Models.Kupac", b =>
                {
                    b.Navigation("Kupovine");
                });

            modelBuilder.Entity("Models.Nekretnina", b =>
                {
                    b.Navigation("Kupovine");
                });
#pragma warning restore 612, 618
        }
    }
}
