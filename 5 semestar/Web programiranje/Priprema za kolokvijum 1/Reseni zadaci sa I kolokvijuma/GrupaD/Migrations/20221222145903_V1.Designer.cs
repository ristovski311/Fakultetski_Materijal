// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace WebTemplate.Migrations
{
    [DbContext(typeof(IspitContext))]
    [Migration("20221222145903_V1")]
    partial class V1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Banka", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("BrojTelefona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("BrojZaposlenih")
                        .HasColumnType("bigint");

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Banke");
                });

            modelBuilder.Entity("Models.Klijent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("BrojTelefona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Klijenti");
                });

            modelBuilder.Entity("Models.Racun", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("BankaID")
                        .HasColumnType("int");

                    b.Property<int>("BrojRacuna")
                        .HasColumnType("int");

                    b.Property<int?>("KlijentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Otvoren")
                        .HasColumnType("datetime2");

                    b.Property<int>("PodigaoDoSada")
                        .HasColumnType("int");

                    b.Property<int>("Sredstva")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BankaID");

                    b.HasIndex("KlijentID");

                    b.ToTable("Racuni");
                });

            modelBuilder.Entity("Models.Racun", b =>
                {
                    b.HasOne("Models.Banka", "Banka")
                        .WithMany("Racuni")
                        .HasForeignKey("BankaID");

                    b.HasOne("Models.Klijent", "Klijent")
                        .WithMany("Racuni")
                        .HasForeignKey("KlijentID");

                    b.Navigation("Banka");

                    b.Navigation("Klijent");
                });

            modelBuilder.Entity("Models.Banka", b =>
                {
                    b.Navigation("Racuni");
                });

            modelBuilder.Entity("Models.Klijent", b =>
                {
                    b.Navigation("Racuni");
                });
#pragma warning restore 612, 618
        }
    }
}
