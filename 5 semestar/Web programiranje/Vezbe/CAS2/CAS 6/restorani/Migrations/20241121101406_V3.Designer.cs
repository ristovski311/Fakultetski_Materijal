// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using restorani.Models;

#nullable disable

namespace restorani.Migrations
{
    [DbContext(typeof(RestoraniContext))]
    [Migration("20241121101406_V3")]
    partial class V3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("restorani.Models.Grad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BrojStanovnika")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("Povrsina")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("Gradovi");
                });

            modelBuilder.Entity("restorani.Models.Jelo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("DaLiJeJelo")
                        .HasColumnType("bit");

                    b.Property<int?>("KalorijskaVrednost")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RestoranID")
                        .HasColumnType("int");

                    b.Property<string>("Slika")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RestoranID");

                    b.ToTable("Jela");
                });

            modelBuilder.Entity("restorani.Models.JeloSastojak", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("JeloID")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("SastojakID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("JeloID");

                    b.HasIndex("SastojakID");

                    b.ToTable("Recept");
                });

            modelBuilder.Entity("restorani.Models.Magacin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int?>("RestoranID")
                        .HasColumnType("int");

                    b.Property<int?>("SastojakID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RestoranID");

                    b.HasIndex("SastojakID");

                    b.ToTable("MagaciniRestorana");
                });

            modelBuilder.Entity("restorani.Models.Restoran", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BrojOcenjivanja")
                        .HasColumnType("int");

                    b.Property<int?>("GradID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Prihodi")
                        .HasColumnType("float");

                    b.Property<double>("Rashodi")
                        .HasColumnType("float");

                    b.Property<int?>("TipID")
                        .HasColumnType("int");

                    b.Property<int>("UkupnaSumaOcena")
                        .HasColumnType("int");

                    b.Property<double>("X")
                        .HasColumnType("float");

                    b.Property<double>("Y")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("GradID");

                    b.HasIndex("TipID");

                    b.ToTable("Restorani");
                });

            modelBuilder.Entity("restorani.Models.Sastojak", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RokTrajanja")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Sastojci");
                });

            modelBuilder.Entity("restorani.Models.TipRestorana", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TipRestorana");
                });

            modelBuilder.Entity("restorani.Models.Jelo", b =>
                {
                    b.HasOne("restorani.Models.Restoran", "Restoran")
                        .WithMany("Meni")
                        .HasForeignKey("RestoranID");

                    b.Navigation("Restoran");
                });

            modelBuilder.Entity("restorani.Models.JeloSastojak", b =>
                {
                    b.HasOne("restorani.Models.Jelo", "Jelo")
                        .WithMany("Sastojci")
                        .HasForeignKey("JeloID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("restorani.Models.Sastojak", "Sastojak")
                        .WithMany()
                        .HasForeignKey("SastojakID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jelo");

                    b.Navigation("Sastojak");
                });

            modelBuilder.Entity("restorani.Models.Magacin", b =>
                {
                    b.HasOne("restorani.Models.Restoran", "Restoran")
                        .WithMany("Magacin")
                        .HasForeignKey("RestoranID");

                    b.HasOne("restorani.Models.Sastojak", "Sastojak")
                        .WithMany("Magacin")
                        .HasForeignKey("SastojakID");

                    b.Navigation("Restoran");

                    b.Navigation("Sastojak");
                });

            modelBuilder.Entity("restorani.Models.Restoran", b =>
                {
                    b.HasOne("restorani.Models.Grad", "Grad")
                        .WithMany("Restorani")
                        .HasForeignKey("GradID");

                    b.HasOne("restorani.Models.TipRestorana", "Tip")
                        .WithMany()
                        .HasForeignKey("TipID");

                    b.Navigation("Grad");

                    b.Navigation("Tip");
                });

            modelBuilder.Entity("restorani.Models.Grad", b =>
                {
                    b.Navigation("Restorani");
                });

            modelBuilder.Entity("restorani.Models.Jelo", b =>
                {
                    b.Navigation("Sastojci");
                });

            modelBuilder.Entity("restorani.Models.Restoran", b =>
                {
                    b.Navigation("Magacin");

                    b.Navigation("Meni");
                });

            modelBuilder.Entity("restorani.Models.Sastojak", b =>
                {
                    b.Navigation("Magacin");
                });
#pragma warning restore 612, 618
        }
    }
}
