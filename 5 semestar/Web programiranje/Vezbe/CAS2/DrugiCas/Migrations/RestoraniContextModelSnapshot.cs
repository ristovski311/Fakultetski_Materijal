// <auto-generated />
using System;
using DrugiCas.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DrugiCas.Migrations
{
    [DbContext(typeof(RestoraniContext))]
    partial class RestoraniContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DrugiCas.Models.Grad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BrojStanovnika")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Povrsina")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Gradovi");
                });

            modelBuilder.Entity("DrugiCas.Models.Restoran", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BrojOcenjivanja")
                        .HasColumnType("int");

                    b.Property<int?>("GradID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Prihodi")
                        .HasColumnType("float");

                    b.Property<double>("Rashodi")
                        .HasColumnType("float");

                    b.Property<int?>("TipID")
                        .HasColumnType("int");

                    b.Property<int>("UkupnaSumaOcena")
                        .HasColumnType("int");

                    b.Property<double>("X")
                        .HasColumnType("float");

                    b.Property<double>("Y")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("GradID");

                    b.HasIndex("TipID");

                    b.ToTable("Restorani");
                });

            modelBuilder.Entity("Models.Jelo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("DaLiJeJelo")
                        .HasColumnType("bit");

                    b.Property<int?>("KalorijskaVrednost")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RestoranID")
                        .HasColumnType("int");

                    b.Property<string>("Slika")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RestoranID");

                    b.ToTable("Jelo");
                });

            modelBuilder.Entity("Models.JeloSastojak", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("JeloID")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("SastojakID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("JeloID");

                    b.HasIndex("SastojakID");

                    b.ToTable("JeloSastojak");
                });

            modelBuilder.Entity("Models.Magacin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("RestoranID")
                        .HasColumnType("int");

                    b.Property<int>("SastojakID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RestoranID");

                    b.HasIndex("SastojakID");

                    b.ToTable("Magacin");
                });

            modelBuilder.Entity("Models.Sastojak", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RokTrajanja")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Sastojak");
                });

            modelBuilder.Entity("Models.TipRestorana", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TipRestorana");
                });

            modelBuilder.Entity("DrugiCas.Models.Restoran", b =>
                {
                    b.HasOne("DrugiCas.Models.Grad", "Grad")
                        .WithMany("Restorani")
                        .HasForeignKey("GradID");

                    b.HasOne("Models.TipRestorana", "Tip")
                        .WithMany()
                        .HasForeignKey("TipID");

                    b.Navigation("Grad");

                    b.Navigation("Tip");
                });

            modelBuilder.Entity("Models.Jelo", b =>
                {
                    b.HasOne("DrugiCas.Models.Restoran", "Restoran")
                        .WithMany("Meni")
                        .HasForeignKey("RestoranID");

                    b.Navigation("Restoran");
                });

            modelBuilder.Entity("Models.JeloSastojak", b =>
                {
                    b.HasOne("Models.Jelo", "Jelo")
                        .WithMany("Sastojci")
                        .HasForeignKey("JeloID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Sastojak", "Sastojak")
                        .WithMany()
                        .HasForeignKey("SastojakID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jelo");

                    b.Navigation("Sastojak");
                });

            modelBuilder.Entity("Models.Magacin", b =>
                {
                    b.HasOne("DrugiCas.Models.Restoran", "Restoran")
                        .WithMany("Magacin")
                        .HasForeignKey("RestoranID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Sastojak", "Sastojak")
                        .WithMany("Magacin")
                        .HasForeignKey("SastojakID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restoran");

                    b.Navigation("Sastojak");
                });

            modelBuilder.Entity("DrugiCas.Models.Grad", b =>
                {
                    b.Navigation("Restorani");
                });

            modelBuilder.Entity("DrugiCas.Models.Restoran", b =>
                {
                    b.Navigation("Magacin");

                    b.Navigation("Meni");
                });

            modelBuilder.Entity("Models.Jelo", b =>
                {
                    b.Navigation("Sastojci");
                });

            modelBuilder.Entity("Models.Sastojak", b =>
                {
                    b.Navigation("Magacin");
                });
#pragma warning restore 612, 618
        }
    }
}
